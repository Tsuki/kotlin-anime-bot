/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.tgbot.jooq.public_.tables.records;


import com.sukitsuki.tgbot.jooq.public_.tables.Tag;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagRecord extends UpdatableRecordImpl<TagRecord> implements Record6<Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1841532967;

    /**
     * Setter for <code>PUBLIC.TAG.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TAG.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TAG.RID</code>.
     */
    public void setRid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TAG.RID</code>.
     */
    public String getRid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TAG.ZHTW</code>.
     */
    public void setZhtw(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TAG.ZHTW</code>.
     */
    public String getZhtw() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.TAG.ZHCN</code>.
     */
    public void setZhcn(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.TAG.ZHCN</code>.
     */
    public String getZhcn() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.TAG.EN</code>.
     */
    public void setEn(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.TAG.EN</code>.
     */
    public String getEn() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.TAG.JP</code>.
     */
    public void setJp(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.TAG.JP</code>.
     */
    public String getJp() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Tag.TAG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tag.TAG.RID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tag.TAG.ZHTW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Tag.TAG.ZHCN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Tag.TAG.EN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Tag.TAG.JP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getZhtw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getZhcn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getJp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord value2(String value) {
        setRid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord value3(String value) {
        setZhtw(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord value4(String value) {
        setZhcn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord value5(String value) {
        setEn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord value6(String value) {
        setJp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TagRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(Tag.TAG);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(Integer id, String rid, String zhtw, String zhcn, String en, String jp) {
        super(Tag.TAG);

        set(0, id);
        set(1, rid);
        set(2, zhtw);
        set(3, zhcn);
        set(4, en);
        set(5, jp);
    }
}
